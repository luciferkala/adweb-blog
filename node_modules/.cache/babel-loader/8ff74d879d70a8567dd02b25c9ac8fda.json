{"ast":null,"code":"import _slicedToArray from \"/Users/movingmt/Documents/githubproject/aw_blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/movingmt/Documents/githubproject/aw_blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/movingmt/Documents/githubproject/aw_blog/src/views/admin/PrivateRoute.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Redirect, useHistory, useLocation } from \"react-router-dom\";\n\nfunction PrivateRoute(_ref) {\n  let isAuth = _ref.isAuth,\n      path = _ref.path,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"isAuth\", \"path\", \"children\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAutheticated = _useState2[0],\n        useisAutheticated = _useState2[1];\n\n  useEffect(() => {\n    useisAutheticated(isAuth());\n  }, [isAutheticated]);\n  return React.createElement(Route, Object.assign({\n    path: path\n  }, rest, {\n    render: ({\n      location\n    }) => isAutheticated ? children : React.createElement(Redirect, {\n      to: {\n        pathname: \"/admin\",\n        state: {\n          from: location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/movingmt/Documents/githubproject/aw_blog/src/views/admin/PrivateRoute.js"],"names":["React","useState","useEffect","Route","Redirect","useHistory","useLocation","PrivateRoute","isAuth","path","children","rest","isAutheticated","useisAutheticated","location","pathname","state","from"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,WAAtC,QAAyD,kBAAzD;;AAEA,SAASC,YAAT,OAA2D;AAAA,MAAnCC,MAAmC,QAAnCA,MAAmC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAARC,IAAQ;;AAAA,oBACbV,QAAQ,CAAC,KAAD,CADK;AAAA;AAAA,QAClDW,cADkD;AAAA,QAClCC,iBADkC;;AAGzDX,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,iBAAiB,CAACL,MAAM,EAAP,CAAjB;AACD,GAFQ,EAEN,CAACI,cAAD,CAFM,CAAT;AAIA,SACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEH;AADR,KAEME,IAFN;AAGE,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KACNF,cAAc,GACZF,QADY,GAGZ,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFK,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAkBD;;AAED,eAAeP,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Route, Redirect, useHistory, useLocation } from \"react-router-dom\";\n\nfunction PrivateRoute({ isAuth, path, children, ...rest }) {\n  const [isAutheticated, useisAutheticated] = useState(false);\n\n  useEffect(() => {\n    useisAutheticated(isAuth());\n  }, [isAutheticated]);\n\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={({ location }) =>\n        isAutheticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/admin\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}