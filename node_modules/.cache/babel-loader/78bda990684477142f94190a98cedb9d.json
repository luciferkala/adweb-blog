{"ast":null,"code":"import _slicedToArray from \"/Users/movingmt/Documents/githubproject/aw_blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/movingmt/Documents/githubproject/aw_blog/src/views/Develop.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomCard from \"../components/CustomCard\";\nimport { Link } from \"react-router-dom\";\nimport Show from \"./Show\";\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\"\n  }\n}));\n\nfunction Develop() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        contents = _useState2[0],\n        setContents = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchContents = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setContents(null); // loading 상태를 true 로 바꿉니다.\n\n        setLoading(true);\n        const response = await axios.get(\"/categories/5de6490186bfe46f94f28c75/articles/\");\n        setContents([...response.data.data]); // 데이터는 response.data 안에 들어있습니다.\n\n        console.log(response.data.data);\n      } catch (e) {\n        setError(e);\n      }\n\n      setLoading(false);\n    };\n\n    fetchContents();\n  }, []);\n  if (loading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\uB85C\\uB529\\uC911..\");\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, error);\n  if (!contents) return null; // const contentLen = contents.length;\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, contents.map((content, index) => React.createElement(Link, {\n    to: \"/show\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CustomCard, {\n    xs: 12,\n    contentId: content._id,\n    thumbnail: content.thumbnail,\n    articlename: content.articlename,\n    contents: content.contents,\n    createdAt: content.createdAt.substring(0, 10),\n    width: \"1000px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n}\n\nexport default Develop;","map":{"version":3,"sources":["/Users/movingmt/Documents/githubproject/aw_blog/src/views/Develop.js"],"names":["React","useState","useEffect","axios","Grid","makeStyles","CustomCard","Link","Show","useStyles","theme","link","textDecoration","color","Develop","contents","setContents","loading","setLoading","error","setError","classes","fetchContents","response","get","data","console","log","e","map","content","index","_id","thumbnail","articlename","createdAt","substring"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,cAAc,EAAE,MAAlB;AAA0BC,IAAAA,KAAK,EAAE;AAAjC;AAD+B,CAAL,CAAN,CAA5B;;AAIA,SAASC,OAAT,GAAmB;AAAA,oBACeb,QAAQ,CAAC,IAAD,CADvB;AAAA;AAAA,QACVc,QADU;AAAA,QACAC,WADA;;AAAA,qBAEaf,QAAQ,CAAC,KAAD,CAFrB;AAAA;AAAA,QAEVgB,OAFU;AAAA,QAEDC,UAFC;;AAAA,qBAGSjB,QAAQ,CAAC,IAAD,CAHjB;AAAA;AAAA,QAGVkB,KAHU;AAAA,QAGHC,QAHG;;AAKjB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,aAAa,GAAG,YAAY;AAChC,UAAI;AACF;AACAF,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,QAAAA,WAAW,CAAC,IAAD,CAAX,CAHE,CAIF;;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMK,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CACrB,gDADqB,CAAvB;AAGAR,QAAAA,WAAW,CAAC,CAAC,GAAGO,QAAQ,CAACE,IAAT,CAAcA,IAAlB,CAAD,CAAX,CATE,CASoC;;AACtCC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAAT,CAAcA,IAA1B;AACD,OAXD,CAWE,OAAOG,CAAP,EAAU;AACVR,QAAAA,QAAQ,CAACQ,CAAD,CAAR;AACD;;AACDV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAhBD;;AAiBAI,IAAAA,aAAa;AACd,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,MAAIL,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACb,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAN,CAAP;AACX,MAAI,CAACJ,QAAL,EAAe,OAAO,IAAP,CA9BE,CAgCjB;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACc,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACZ,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAiB,IAAA,GAAG,EAAEA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,EAAE,EAAE,EADN;AAEE,IAAA,SAAS,EAAED,OAAO,CAACE,GAFrB;AAGE,IAAA,SAAS,EAAEF,OAAO,CAACG,SAHrB;AAIE,IAAA,WAAW,EAAEH,OAAO,CAACI,WAJvB;AAKE,IAAA,QAAQ,EAAEJ,OAAO,CAACf,QALpB;AAME,IAAA,SAAS,EAAEe,OAAO,CAACK,SAAR,CAAkBC,SAAlB,CAA4B,CAA5B,EAA+B,EAA/B,CANb;AAOE,IAAA,KAAK,EAAC,QAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF;AAiBD;;AAED,eAAetB,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CustomCard from \"../components/CustomCard\";\nimport { Link } from \"react-router-dom\";\n\nimport Show from \"./Show\";\n\nconst useStyles = makeStyles(theme => ({\n  link: { textDecoration: \"none\", color: \"inherit\" }\n}));\n\nfunction Develop() {\n  const [contents, setContents] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const fetchContents = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setContents(null);\n        // loading 상태를 true 로 바꿉니다.\n        setLoading(true);\n        const response = await axios.get(\n          \"/categories/5de6490186bfe46f94f28c75/articles/\"\n        );\n        setContents([...response.data.data]); // 데이터는 response.data 안에 들어있습니다.\n        console.log(response.data.data);\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    };\n    fetchContents();\n  }, []);\n\n  if (loading) return <div>로딩중..</div>;\n  if (error) return <div>{error}</div>;\n  if (!contents) return null;\n\n  // const contentLen = contents.length;\n\n  return (\n    <Grid container>\n      {contents.map((content, index) => (\n        <Link to=\"/show\" key={index}>\n          <CustomCard\n            xs={12}\n            contentId={content._id}\n            thumbnail={content.thumbnail}\n            articlename={content.articlename}\n            contents={content.contents}\n            createdAt={content.createdAt.substring(0, 10)}\n            width=\"1000px\"\n          ></CustomCard>\n        </Link>\n      ))}\n    </Grid>\n  );\n}\n\nexport default Develop;\n"]},"metadata":{},"sourceType":"module"}